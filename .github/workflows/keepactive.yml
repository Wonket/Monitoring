name: Keep Active

on:
  schedule:
    - cron: "0 0 */15 * *"  # 每15天运行一次
  workflow_dispatch:

env:
  PAT: ${{ secrets.PAT }}
  USER: ${{ secrets.USER }}
  REPO: ${{ secrets.REPO }}  # 🔁 这里作为 "目标远程仓库"

jobs:
  run-automation:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout current repo
      uses: actions/checkout@v4
      with:
        persist-credentials: false

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install Python dependencies
      run: |
        pip install --upgrade pip
        pip install jinja2 python-dotenv

    - name: Run bludweb.py to generate 'webs' directory
      run: python templates/bludweb.py webs 99
      env:
        PAT: ${{ secrets.PAT }}
        USER: ${{ secrets.USER }}
        REPO: ${{ secrets.REPO }}  # 保持一致，脚本中会被忽略推送

    - name: Debug output (可选)
      run: |
        echo "✅ webs 目录内容："
        ls -la webs || echo "webs 不存在"
        cat webs/* || echo "无文件"

    - name: Push 'webs/' directory to target repo
      env:
        TOKEN: ${{ secrets.PAT }}
        USER: ${{ secrets.USER }}
        REPO: ${{ secrets.REPO }}  # 👈 这里指向目标仓库名（如 your-username/other-repo）
      run: |
        echo "📥 克隆目标仓库：${USER}/${REPO}"
        git clone https://x-access-token:${TOKEN}@github.com/${USER}/${REPO}.git target-repo

        echo "🧹 清空目标仓库内容"
        rm -rf target-repo/*

        echo "📦 拷贝 webs 到目标仓库"
        cp -r webs/* target-repo/

        cd target-repo
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"

        git add .
        git commit -m "📦 Updated by GitHub Actions on $(date +'%Y-%m-%d %H:%M:%S')" || echo "Nothing to commit"
        git push origin main
